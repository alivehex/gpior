


ARM Macro Assembler    Page 1 


    1 00000000         ; ************************************
    2 00000000         ; startup assembly file
    3 00000000         ; ************************************ 
    4 00000000         
    5 00000000         ; ****************************************
    6 00000000         ; use MDK XML reader to config ARM vectors
    7 00000000         ; ****************************************
    8 00000000         
    9 00000000         ; <<< Use Configuration Wizard in Context Menu >>>
   10 00000000                 PRESERVE8
   11 00000000                 AREA             STARTUP,CODE,READONLY
   12 00000000                 ENTRY
   13 00000000                 ARM
   14 00000000         
   15 00000000                 EXPORT           VCT_TABLE
   16 00000000         ; _cstartup: C CODE startup function
   17 00000000                 IMPORT           _cstartup
   18 00000000                 IMPORT           __main
   19 00000000         
   20 00000000         ; <h> ARM interrupt handler extern enable  
   21 00000000         ;   <q> undefined handler extern
   22 00000000 00000000 
                       EXTERN_UNDEF_HANDLER
                               EQU              0
   23 00000000         ;   <q> swi handler extern
   24 00000000 00000000 
                       EXTERN_SWI_HANDLER
                               EQU              0
   25 00000000         ;   <q> prefetch handler extern
   26 00000000 00000000 
                       EXTERN_PREFETCH_HANDLER
                               EQU              0
   27 00000000         ;   <q> abort handler extern
   28 00000000 00000000 
                       EXTERN_ABORT_HANDLER
                               EQU              0
   29 00000000         ;   <q> irq handler extern
   30 00000000 00000000 
                       EXTERN_IRQ_HANDLER
                               EQU              0
   31 00000000         ;  <q> fiq handler extern
   32 00000000 00000000 
                       EXTERN_FIQ_HANDLER
                               EQU              0
   33 00000000         ; </h>
   34 00000000         
   35 00000000         VCT_TABLE
   36 00000000         
   37 00000000 E59FF018        ldr              pc, RESET_ADDR
   38 00000004 E59FF018        ldr              pc, UNDEF_ADDR
   39 00000008 E59FF018        ldr              pc, SWI_ADDR
   40 0000000C E59FF018        ldr              pc, PREFETCH_ADDR
   41 00000010 E59FF018        ldr              pc, ABORT_ADDR
   42 00000014 E1A00000        NOP
   43 00000018 E59FF014        ldr              pc, IRQ_ADDR
   44 0000001C E59FF014        ldr              pc, FIQ_ADDR
   45 00000020         
   46 00000020 00000000 
                       RESET_ADDR



ARM Macro Assembler    Page 2 


                               DCD              RESET_HANDLER
   47 00000024 00000000 
                       UNDEF_ADDR
                               DCD              UNDEF_HANDLER
   48 00000028 00000000 
                       SWI_ADDR
                               DCD              SWI_HANDLER
   49 0000002C 00000000 
                       PREFETCH_ADDR
                               DCD              PREFETCH_HANDLER
   50 00000030 00000000 
                       ABORT_ADDR
                               DCD              ABORT_HANDLER
   51 00000034 00000000 
                       IRQ_ADDR
                               DCD              IRQ_HANDLER
   52 00000038 00000000 
                       FIQ_ADDR
                               DCD              FIQ_HANDLER
   53 0000003C         
   54 0000003C         ; extern undefined handler
   55 0000003C                 IF               (EXTERN_UNDEF_HANDLER > 0)
   58 0000003C EAFFFFFE 
                       UNDEF_HANDLER
                               B                UNDEF_HANDLER
   59 00000040                 ENDIF
   60 00000040         ; extern swi handler
   61 00000040                 IF               (EXTERN_SWI_HANDLER > 0)
   64 00000040 EAFFFFFE 
                       SWI_HANDLER
                               B                SWI_HANDLER
   65 00000044                 ENDIF
   66 00000044         ; extern prefetch handler
   67 00000044                 IF               (EXTERN_PREFETCH_HANDLER > 0)
   70 00000044 EAFFFFFE 
                       PREFETCH_HANDLER
                               B                PREFETCH_HANDLER
   71 00000048                 ENDIF
   72 00000048         ; extern abort handler
   73 00000048                 IF               (EXTERN_ABORT_HANDLER > 0)
   76 00000048 EAFFFFFE 
                       ABORT_HANDLER
                               B                ABORT_HANDLER
   77 0000004C                 ENDIF
   78 0000004C         ; extern irq handler
   79 0000004C                 IF               (EXTERN_IRQ_HANDLER > 0)
   82 0000004C EAFFFFFE 
                       IRQ_HANDLER
                               B                IRQ_HANDLER
   83 00000050                 ENDIF
   84 00000050         ; extern fiq handler
   85 00000050                 IF               (EXTERN_FIQ_HANDLER > 0)
   88 00000050 EAFFFFFE 
                       FIQ_HANDLER
                               B                FIQ_HANDLER
   89 00000054                 ENDIF
   90 00000054         
   91 00000054         ; CPU modes
   92 00000054 00000010 



ARM Macro Assembler    Page 3 


                       MODE_USR
                               EQU              0x10
   93 00000054 00000011 
                       MODE_FIQ
                               EQU              0x11
   94 00000054 00000012 
                       MODE_IRQ
                               EQU              0x12
   95 00000054 00000013 
                       MODE_SVC
                               EQU              0x13
   96 00000054 00000017 
                       MODE_ABT
                               EQU              0x17
   97 00000054 0000001B 
                       MODE_UND
                               EQU              0x1B
   98 00000054 0000001F 
                       MODE_SYS
                               EQU              0x1F
   99 00000054         ; IRQ and FIQ disable mask
  100 00000054 00000080 
                       IRQ_MASK
                               EQU              0x80
  101 00000054 00000040 
                       FIQ_MASK
                               EQU              0x40
  102 00000054         
  103 00000054         ; <q> Config EXT-RAM
  104 00000054 00000000 
                       CONFIG_EXRAM
                               EQU              0
  105 00000054         ; <q> Enable C-CACHE
  106 00000054 00000001 
                       EN_CCACHE
                               EQU              1
  107 00000054         ; <q> Enable D-CACHE
  108 00000054 00000000 
                       EN_DCACHE
                               EQU              0
  109 00000054         
  110 00000054         ; <h> CPU configurations
  111 00000054         ; <o> CPU INT-RAM address <0x0-0xFFFFFFFF>
  112 00000054 00200000 
                       CPU_INRAM_ADDR
                               EQU              0x200000
  113 00000054         ; <o> CPU INT-RAM size(KB) <0-1000000> <#*1024>
  114 00000054 00004000 
                       CPU_INRAM_SIZEB
                               EQU              16384
  115 00000054         ; <o> CPU EXT-RAM address <0x0-0xFFFFFFFF>
  116 00000054 20000000 
                       CPU_EXRAM_ADDR
                               EQU              0x20000000
  117 00000054         ; <o> CPU EXT-RAM size(MB) <0-1000000> <#*1048576>
  118 00000054 04000000 
                       CPU_EXRAM_SIZEB
                               EQU              67108864
  119 00000054         ; </h>



ARM Macro Assembler    Page 4 


  120 00000054         
  121 00000054         ; <h> HEAP/STACK size configurations
  122 00000054         ; <o> HEAP size(B) <0-1073741824>
  123 00000054 00200000 
                       HEAP_SIZEB
                               EQU              2097152
  124 00000054         ; <o> SVC mode stack size(B) <0-1073741824>
  125 00000054 00A00000 
                       STACK_SVC_SIZEB
                               EQU              10485760
  126 00000054         ; <o> FIQ mode stack size(B) <0-1073741824>
  127 00000054 00000400 
                       STACK_FIQ_SIZEB
                               EQU              1024
  128 00000054         ;  <o> IRQ mode stack size(B) <0-1073741824>
  129 00000054 00000400 
                       STACK_IRQ_SIZEB
                               EQU              1024
  130 00000054         ; <o> ABORT mode stack size(B) <0-1073741824>
  131 00000054 00000200 
                       STACK_ABT_SIZEB
                               EQU              512
  132 00000054         ; <o> UNDEFINED mode stack size(B) <0-1073741824>
  133 00000054 00000200 
                       STACK_UNDEF_SIZEB
                               EQU              512
  134 00000054         ;   <o> STACK in ?
  135 00000054 00000001 
                       STACK_BASE_ADDR
                               EQU              1
  136 00000054         ;  <0=> INT-RAM <1=> EXT-RAM
  137 00000054         ; </h>
  139 00000054 00A00C00 
                       STACK_SIZEB
                               EQU              (STACK_SVC_SIZEB + STACK_FIQ_SI
ZEB + STACK_IRQ_SIZEB +          STACK_ABT_SIZEB + STACK_UNDEF_SIZEB)
  140 00000054         
  141 00000054         ; everything starts here
  142 00000054         RESET_HANDLER
  143 00000054         
  144 00000054         ; disable D-CACHE and C-CACHE
  145 00000054 EE110F10        MRC              p15, 0, R0, c1, c0, 0
  146 00000058 E3C00A01        BIC              R0, R0, #(1 << 12)
  147 0000005C E3C00004        BIC              R0, R0, #(1 << 2)
  148 00000060 EE010F10        MCR              p15, 0, R0, c1, c0, 0
  149 00000064         
  150 00000064         ; into SVC MODE and disable irq and fiq interrupt
  151 00000064 E321F0D3        MSR              CPSR_C, #MODE_SVC:OR:IRQ_MASK:O
R:FIQ_MASK
  152 00000068         ; setup internal ram as temp stack, 2KB
  153 00000068 E59F0068        LDR              R0, = (CPU_INRAM_ADDR + 2048)
  154 0000006C E1A0D000        MOV              SP, R0
  155 00000070         ; jump into C-CODE startup function
  156 00000070 E3A00000        LDR              R0, = CONFIG_EXRAM
  157 00000074 EBFFFFFE        BL               _cstartup
  158 00000078         
  159 00000078         ; cache Setup
  160 00000078 EE110F10        MRC              p15, 0, R0, c1, c0, 0 ; Enable 
                                                            Instruction Cache



ARM Macro Assembler    Page 5 


  161 0000007C                 IF               (EN_CCACHE > 0)
  162 0000007C E3800A01        ORR              R0, R0, #(1 << 12)
  163 00000080                 ELSE
  165                          ENDIF
  166 00000080                 IF               (EN_DCACHE > 0)
  169 00000080 E3C00004        BIC              R0, R0, #(1 << 2)
  170 00000084                 ENDIF
  171 00000084 EE010F10        MCR              p15, 0, R0, c1, c0, 0
  172 00000088         
  173 00000088         ; stack setup
  174 00000088                 IF               (STACK_BASE_ADDR == 0)
  177 00000088 E59F004C        LDR              R0, = (CPU_EXRAM_ADDR + STACK_S
IZEB - 16)
  178 0000008C                 ENDIF
  179 0000008C         ; UNDEF mode
  180 0000008C E321F0DB        MSR              CPSR_c, #MODE_UND:OR:IRQ_MASK:O
R:FIQ_MASK
  181 00000090 E1A0D000        MOV              SP, R0
  182 00000094 E2400C02        SUB              R0, R0, #STACK_UNDEF_SIZEB
  183 00000098         ; ABORT mode
  184 00000098 E321F0D7        MSR              CPSR_c, #MODE_ABT:OR:IRQ_MASK:O
R:FIQ_MASK
  185 0000009C E1A0D000        MOV              SP, R0
  186 000000A0 E2400C02        SUB              R0, R0, #STACK_ABT_SIZEB
  187 000000A4         ; FIQ mode
  188 000000A4 E321F0D1        MSR              CPSR_c, #MODE_FIQ:OR:IRQ_MASK:O
R:FIQ_MASK
  189 000000A8 E1A0D000        MOV              SP, R0
  190 000000AC E2400B01        SUB              R0, R0, #STACK_FIQ_SIZEB
  191 000000B0         ; IRQ mode
  192 000000B0 E321F0D2        MSR              CPSR_c, #MODE_IRQ:OR:IRQ_MASK:O
R:FIQ_MASK
  193 000000B4 E1A0D000        MOV              SP, R0
  194 000000B8 E2400B01        SUB              R0, R0, #STACK_IRQ_SIZEB
  195 000000BC         ; SVC mode
  196 000000BC E321F012        MSR              CPSR_c, #MODE_IRQ
  197 000000C0 E1A0D000        MOV              SP, R0
  198 000000C4 E240060A        SUB              R0, R0, #STACK_SVC_SIZEB
  199 000000C8         
  200 000000C8         ; enable IRQ and FIR interrupt in SVC mode
  201 000000C8 E10F0000        MRS              R0, CPSR
  202 000000CC E3C000C0        BIC              R0, R0, #(3 << 6)
  203 000000D0 E121F000        MSR              CPSR_c, R0
  204 000000D4         
  205 000000D4         ;jump to main
  206 000000D4 EAFFFFFE        b                __main
  207 000000D8         
  208 000000D8 00200800 
              20A00BF0         AREA             STACK_HEAP, CODE, READONLY
  209 00000000                 EXPORT           __user_initial_stackheap
  210 00000000                 IMPORT           __use_two_region_memory
  211 00000000         ; |Image$$HEAP$$Limit| must be in scatter file    
  212 00000000                 IMPORT           |Image$$HEAP$$Limit|
  213 00000000         __user_initial_stackheap
  214 00000000         
  215 00000000         ; FIXME:
  216 00000000         ; __user_setup_stackheap:
  217 00000000         ; 1. heap base in r0
  218 00000000         ; 2. stack base in r1, that is, the highest address in t



ARM Macro Assembler    Page 6 


                       he stack region
  219 00000000         ; 3. heap limit in r2
  220 00000000         ; 4. stack limit in r3, that is, the lowest address in t
                       he stack region
  221 00000000         
  222 00000000 E59F000C        LDR              R0, = |Image$$HEAP$$Limit|
  223 00000004                 IF               (STACK_BASE_ADDR == 0)
  226 00000004 E59F100C        LDR              R1, = (CPU_EXRAM_ADDR + STACK_S
IZEB - 16)
  227 00000008                 ENDIF
  228 00000008 E59F200C        LDR              R2, =(HEAP_SIZEB + |Image$$HEAP
$$Limit|)
  229 0000000C E59F300C        LDR              R3, = (STACK_BASE_ADDR - STACK_
SIZEB)
  230 00000010         
  231 00000010 E12FFF1E        BX               LR
  232 00000014         
  233 00000014                 END
              00000000 
              20A00BF0 
              00200000 
              FF5FF401 
Command Line: --debug --xref --cpu=ARM920T --apcs=interwork --depend=.\startup.
d -o.\startup.o -I"D:\Program Files\MDK\ARM\RV31\Inc" -I"D:\Program Files\MDK\A
RM\CMSIS\Include" -I"D:\Program Files\MDK\ARM\Inc\Atmel\RM9200" --list=startup.
lst ..\startup.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ABORT_ADDR 00000030

Symbol: ABORT_ADDR
   Definitions
      At line 50 in file ..\startup.s
   Uses
      At line 41 in file ..\startup.s
Comment: ABORT_ADDR used once
ABORT_HANDLER 00000048

Symbol: ABORT_HANDLER
   Definitions
      At line 76 in file ..\startup.s
   Uses
      At line 50 in file ..\startup.s
      At line 76 in file ..\startup.s

FIQ_ADDR 00000038

Symbol: FIQ_ADDR
   Definitions
      At line 52 in file ..\startup.s
   Uses
      At line 44 in file ..\startup.s
Comment: FIQ_ADDR used once
FIQ_HANDLER 00000050

Symbol: FIQ_HANDLER
   Definitions
      At line 88 in file ..\startup.s
   Uses
      At line 52 in file ..\startup.s
      At line 88 in file ..\startup.s

IRQ_ADDR 00000034

Symbol: IRQ_ADDR
   Definitions
      At line 51 in file ..\startup.s
   Uses
      At line 43 in file ..\startup.s
Comment: IRQ_ADDR used once
IRQ_HANDLER 0000004C

Symbol: IRQ_HANDLER
   Definitions
      At line 82 in file ..\startup.s
   Uses
      At line 51 in file ..\startup.s
      At line 82 in file ..\startup.s

PREFETCH_ADDR 0000002C

Symbol: PREFETCH_ADDR
   Definitions
      At line 49 in file ..\startup.s
   Uses
      At line 40 in file ..\startup.s
Comment: PREFETCH_ADDR used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

PREFETCH_HANDLER 00000044

Symbol: PREFETCH_HANDLER
   Definitions
      At line 70 in file ..\startup.s
   Uses
      At line 49 in file ..\startup.s
      At line 70 in file ..\startup.s

RESET_ADDR 00000020

Symbol: RESET_ADDR
   Definitions
      At line 46 in file ..\startup.s
   Uses
      At line 37 in file ..\startup.s
Comment: RESET_ADDR used once
RESET_HANDLER 00000054

Symbol: RESET_HANDLER
   Definitions
      At line 142 in file ..\startup.s
   Uses
      At line 46 in file ..\startup.s
Comment: RESET_HANDLER used once
STARTUP 00000000

Symbol: STARTUP
   Definitions
      At line 11 in file ..\startup.s
   Uses
      None
Comment: STARTUP unused
SWI_ADDR 00000028

Symbol: SWI_ADDR
   Definitions
      At line 48 in file ..\startup.s
   Uses
      At line 39 in file ..\startup.s
Comment: SWI_ADDR used once
SWI_HANDLER 00000040

Symbol: SWI_HANDLER
   Definitions
      At line 64 in file ..\startup.s
   Uses
      At line 48 in file ..\startup.s
      At line 64 in file ..\startup.s

UNDEF_ADDR 00000024

Symbol: UNDEF_ADDR
   Definitions
      At line 47 in file ..\startup.s
   Uses
      At line 38 in file ..\startup.s
Comment: UNDEF_ADDR used once
UNDEF_HANDLER 0000003C



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols


Symbol: UNDEF_HANDLER
   Definitions
      At line 58 in file ..\startup.s
   Uses
      At line 47 in file ..\startup.s
      At line 58 in file ..\startup.s

VCT_TABLE 00000000

Symbol: VCT_TABLE
   Definitions
      At line 35 in file ..\startup.s
   Uses
      At line 15 in file ..\startup.s
Comment: VCT_TABLE used once
16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK_HEAP 00000000

Symbol: STACK_HEAP
   Definitions
      At line 208 in file ..\startup.s
   Uses
      None
Comment: STACK_HEAP unused
__user_initial_stackheap 00000000

Symbol: __user_initial_stackheap
   Definitions
      At line 213 in file ..\startup.s
   Uses
      At line 209 in file ..\startup.s
Comment: __user_initial_stackheap used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

CONFIG_EXRAM 00000000

Symbol: CONFIG_EXRAM
   Definitions
      At line 104 in file ..\startup.s
   Uses
      At line 156 in file ..\startup.s
Comment: CONFIG_EXRAM used once
CPU_EXRAM_ADDR 20000000

Symbol: CPU_EXRAM_ADDR
   Definitions
      At line 116 in file ..\startup.s
   Uses
      At line 177 in file ..\startup.s
      At line 226 in file ..\startup.s

CPU_EXRAM_SIZEB 04000000

Symbol: CPU_EXRAM_SIZEB
   Definitions
      At line 118 in file ..\startup.s
   Uses
      None
Comment: CPU_EXRAM_SIZEB unused
CPU_INRAM_ADDR 00200000

Symbol: CPU_INRAM_ADDR
   Definitions
      At line 112 in file ..\startup.s
   Uses
      At line 153 in file ..\startup.s
Comment: CPU_INRAM_ADDR used once
CPU_INRAM_SIZEB 00004000

Symbol: CPU_INRAM_SIZEB
   Definitions
      At line 114 in file ..\startup.s
   Uses
      None
Comment: CPU_INRAM_SIZEB unused
EN_CCACHE 00000001

Symbol: EN_CCACHE
   Definitions
      At line 106 in file ..\startup.s
   Uses
      At line 161 in file ..\startup.s
Comment: EN_CCACHE used once
EN_DCACHE 00000000

Symbol: EN_DCACHE
   Definitions
      At line 108 in file ..\startup.s
   Uses
      At line 166 in file ..\startup.s
Comment: EN_DCACHE used once
EXTERN_ABORT_HANDLER 00000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: EXTERN_ABORT_HANDLER
   Definitions
      At line 28 in file ..\startup.s
   Uses
      At line 73 in file ..\startup.s
Comment: EXTERN_ABORT_HANDLER used once
EXTERN_FIQ_HANDLER 00000000

Symbol: EXTERN_FIQ_HANDLER
   Definitions
      At line 32 in file ..\startup.s
   Uses
      At line 85 in file ..\startup.s
Comment: EXTERN_FIQ_HANDLER used once
EXTERN_IRQ_HANDLER 00000000

Symbol: EXTERN_IRQ_HANDLER
   Definitions
      At line 30 in file ..\startup.s
   Uses
      At line 79 in file ..\startup.s
Comment: EXTERN_IRQ_HANDLER used once
EXTERN_PREFETCH_HANDLER 00000000

Symbol: EXTERN_PREFETCH_HANDLER
   Definitions
      At line 26 in file ..\startup.s
   Uses
      At line 67 in file ..\startup.s
Comment: EXTERN_PREFETCH_HANDLER used once
EXTERN_SWI_HANDLER 00000000

Symbol: EXTERN_SWI_HANDLER
   Definitions
      At line 24 in file ..\startup.s
   Uses
      At line 61 in file ..\startup.s
Comment: EXTERN_SWI_HANDLER used once
EXTERN_UNDEF_HANDLER 00000000

Symbol: EXTERN_UNDEF_HANDLER
   Definitions
      At line 22 in file ..\startup.s
   Uses
      At line 55 in file ..\startup.s
Comment: EXTERN_UNDEF_HANDLER used once
FIQ_MASK 00000040

Symbol: FIQ_MASK
   Definitions
      At line 101 in file ..\startup.s
   Uses
      At line 151 in file ..\startup.s
      At line 180 in file ..\startup.s
      At line 184 in file ..\startup.s
      At line 188 in file ..\startup.s
      At line 192 in file ..\startup.s

HEAP_SIZEB 00200000



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols


Symbol: HEAP_SIZEB
   Definitions
      At line 123 in file ..\startup.s
   Uses
      At line 228 in file ..\startup.s
Comment: HEAP_SIZEB used once
IRQ_MASK 00000080

Symbol: IRQ_MASK
   Definitions
      At line 100 in file ..\startup.s
   Uses
      At line 151 in file ..\startup.s
      At line 180 in file ..\startup.s
      At line 184 in file ..\startup.s
      At line 188 in file ..\startup.s
      At line 192 in file ..\startup.s

MODE_ABT 00000017

Symbol: MODE_ABT
   Definitions
      At line 96 in file ..\startup.s
   Uses
      At line 184 in file ..\startup.s
Comment: MODE_ABT used once
MODE_FIQ 00000011

Symbol: MODE_FIQ
   Definitions
      At line 93 in file ..\startup.s
   Uses
      At line 188 in file ..\startup.s
Comment: MODE_FIQ used once
MODE_IRQ 00000012

Symbol: MODE_IRQ
   Definitions
      At line 94 in file ..\startup.s
   Uses
      At line 192 in file ..\startup.s
      At line 196 in file ..\startup.s

MODE_SVC 00000013

Symbol: MODE_SVC
   Definitions
      At line 95 in file ..\startup.s
   Uses
      At line 151 in file ..\startup.s
Comment: MODE_SVC used once
MODE_SYS 0000001F

Symbol: MODE_SYS
   Definitions
      At line 98 in file ..\startup.s
   Uses
      None



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

Comment: MODE_SYS unused
MODE_UND 0000001B

Symbol: MODE_UND
   Definitions
      At line 97 in file ..\startup.s
   Uses
      At line 180 in file ..\startup.s
Comment: MODE_UND used once
MODE_USR 00000010

Symbol: MODE_USR
   Definitions
      At line 92 in file ..\startup.s
   Uses
      None
Comment: MODE_USR unused
STACK_ABT_SIZEB 00000200

Symbol: STACK_ABT_SIZEB
   Definitions
      At line 131 in file ..\startup.s
   Uses
      At line 139 in file ..\startup.s
      At line 186 in file ..\startup.s

STACK_BASE_ADDR 00000001

Symbol: STACK_BASE_ADDR
   Definitions
      At line 135 in file ..\startup.s
   Uses
      At line 174 in file ..\startup.s
      At line 223 in file ..\startup.s
      At line 229 in file ..\startup.s

STACK_FIQ_SIZEB 00000400

Symbol: STACK_FIQ_SIZEB
   Definitions
      At line 127 in file ..\startup.s
   Uses
      At line 139 in file ..\startup.s
      At line 190 in file ..\startup.s

STACK_IRQ_SIZEB 00000400

Symbol: STACK_IRQ_SIZEB
   Definitions
      At line 129 in file ..\startup.s
   Uses
      At line 139 in file ..\startup.s
      At line 194 in file ..\startup.s

STACK_SIZEB 00A00C00

Symbol: STACK_SIZEB
   Definitions
      At line 139 in file ..\startup.s



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 177 in file ..\startup.s
      At line 226 in file ..\startup.s
      At line 229 in file ..\startup.s

STACK_SVC_SIZEB 00A00000

Symbol: STACK_SVC_SIZEB
   Definitions
      At line 125 in file ..\startup.s
   Uses
      At line 139 in file ..\startup.s
      At line 198 in file ..\startup.s

STACK_UNDEF_SIZEB 00000200

Symbol: STACK_UNDEF_SIZEB
   Definitions
      At line 133 in file ..\startup.s
   Uses
      At line 139 in file ..\startup.s
      At line 182 in file ..\startup.s

30 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Image$$HEAP$$Limit 00000000

Symbol: Image$$HEAP$$Limit
   Definitions
      At line 212 in file ..\startup.s
   Uses
      At line 222 in file ..\startup.s
      At line 228 in file ..\startup.s

__main 00000000

Symbol: __main
   Definitions
      At line 18 in file ..\startup.s
   Uses
      At line 206 in file ..\startup.s
Comment: __main used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory
   Definitions
      At line 210 in file ..\startup.s
   Uses
      None
Comment: __use_two_region_memory unused
_cstartup 00000000

Symbol: _cstartup
   Definitions
      At line 17 in file ..\startup.s
   Uses
      At line 157 in file ..\startup.s
Comment: _cstartup used once
4 symbols
386 symbols in table
